#源定义
source mysql_source 
{
    type                    = mysql                 #TODO
    sql_host                = 10.10.172.189         #TODO 
    sql_user                = dongqiudi             #TODO 
    sql_pass                = u3k6iDmQTmayAD        #TODO
    sql_db                  = dqd_dedecms           #TODO
    sql_port                = 3306                  #TODO 
}

#商城数据库
source mall_source
{
    type                    = mysql
    sql_host                = 10.10.219.222
    sql_user                = mall
    sql_pass                = 4WMnoZu6tZcmFb
    sql_db                  = dqd_mall
    sql_port                = 3306
}


#商品信息, 只有全量, 不需要增量
source product_source : mall_source
{
    sql_query_pre           = SET NAMES utf8
    sql_query               = SELECT products.id, products.product_code, products.title, GROUP_CONCAT(tags.title) as tags, products.created_at FROM products left join product_tags on products.id = product_tags.product_id left join tags on product_tags.tag_id = tags.id where products.status != 0 group by products.id;

    sql_field_string        = created_at
    sql_query_info_pre      = SET NAMES utf8
    sql_query_info          = SELECT * FROM products WHERE id=$id;
}


#用户信息
source user_source : mysql_source 
{
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO search_counters SELECT 1, 'user', MAX(id) FROM users
    sql_query               = SELECT id, username FROM users WHERE id<=( SELECT max_indexed_id FROM search_counters WHERE index_name='user')
    
    sql_query_info_pre      = SET NAMES utf8
    sql_query_info          = SELECT * FROM users WHERE id=$id 
}

source user_delta_source : user_source
{  
    sql_query_pre           = SET NAMES utf8
    sql_query               = SELECT id, username FROM users WHERE id > ( SELECT max_indexed_id FROM search_counters WHERE index_name='user')  
}  

#球员信息
source player_source : mysql_source
{
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO search_counters SELECT 3, 'player', MAX(id) FROM soccer_persons
    sql_query_pre           = REPLACE INTO search_counters SELECT 6, 'custom', MAX(id) FROM custom_tags
    sql_query               = SELECT (custom_tags.id + 100000000) as id, custom_tags.id as person_id, custom_tags.en_name as name, custom_tags.en_name as first_name, custom_tags.name as last_name, replace(custom_tags.name, '-', '') as word, (case when feeds.id is null then 0 else count(*) end) as article_count FROM custom_tags LEFT OUTER JOIN channels ON channels.relate_type = 'CustomTag' AND custom_tags.id = channels.relate_id LEFT OUTER JOIN feeds ON feeds.channel_id = channels.id AND feeds.relate_type = 'Article' WHERE custom_tags.page_title !='球队' AND  custom_tags.id <= ( SELECT max_indexed_id FROM search_counters WHERE index_name='custom') GROUP BY custom_tags.id UNION SELECT soccer_persons.id AS id, soccer_persons.person_id, soccer_persons.name, soccer_persons.first_name, soccer_persons.last_name, replace(word, '-', ''), (case when feeds.id is null then 0 else count(*) end) as article_count FROM soccer_persons LEFT OUTER JOIN players ON soccer_persons.person_id = players.soccerway_id LEFT OUTER JOIN channels ON players.id = channels.relate_id AND channels.relate_type='Player' LEFT OUTER JOIN feeds ON feeds.channel_id = channels.id AND feeds.relate_type = 'Article' LEFT OUTER JOIN model_translations ON model_translations.relate_type = 'SoccerPerson' AND soccer_persons.id = model_translations.relate_id AND lang ='zh-cn' WHERE soccer_persons.id <= ( SELECT max_indexed_id FROM search_counters WHERE index_name='player') AND soccer_persons.type != 'staff' GROUP BY soccer_persons.id 
                                        


    sql_attr_uint           = person_id
    sql_attr_uint           = article_count

    sql_query_info_pre      = SET NAMES utf8    
    sql_query_info          = SELECT * FROM soccer_persons WHERE id=$id
}

source player_delta_source : player_source
{  
    sql_query_pre           = SET NAMES utf8
    sql_query               = SELECT (custom_tags.id + 100000000) as id, custom_tags.id as person_id, custom_tags.en_name as name, custom_tags.en_name as first_name, custom_tags.name as last_name, custom_tags.name as word, (case when feeds.id is null then 0 else count(*) end) as article_count FROM custom_tags LEFT OUTER JOIN channels ON channels.relate_type = 'CustomTag' AND custom_tags.id = channels.relate_id LEFT OUTER JOIN feeds ON feeds.channel_id = channels.id AND feeds.relate_type = 'Article' WHERE custom_tags.page_title !='球队' AND custom_tags.id > ( SELECT max_indexed_id FROM search_counters WHERE index_name='custom') GROUP BY custom_tags.id UNION SELECT soccer_persons.id AS id, soccer_persons.person_id, soccer_persons.name, soccer_persons.first_name, soccer_persons.last_name, word, (case when feeds.id is null then 0 else count(*) end) as article_count FROM soccer_persons LEFT OUTER JOIN players ON soccer_persons.person_id = players.soccerway_id LEFT OUTER JOIN channels ON players.id = channels.relate_id AND channels.relate_type='Player' LEFT OUTER JOIN feeds ON feeds.channel_id = channels.id AND feeds.relate_type = 'Article' LEFT OUTER JOIN model_translations ON model_translations.relate_type = 'SoccerPerson' AND soccer_persons.id = model_translations.relate_id AND lang ='zh-cn' WHERE soccer_persons.id > ( SELECT max_indexed_id FROM search_counters WHERE index_name='player') AND soccer_persons.type != 'staff' GROUP BY soccer_persons.id 


    sql_attr_uint           = person_id
    sql_attr_uint           = article_count
}  


#球队信息
source team_source : mysql_source
{
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO search_counters SELECT 4, 'team', MAX(id) FROM teams
    sql_query               = SELECT soccer_teams.id AS id, soccer_teams.team_id, soccer_teams.club_name as name, soccer_teams.short_club_name as short_name, word, (case when feeds.id is null then 0 else count(*) end) as article_count FROM teams LEFT JOIN soccer_teams ON soccer_teams.team_id = teams.soccerway_id LEFT JOIN channels ON teams.id = channels.relate_id AND channels.relate_type='Team' LEFT JOIN feeds ON feeds.channel_id = channels.id AND feeds.relate_type = 'Article' LEFT OUTER JOIN model_translations ON model_translations.relate_type = 'SoccerTeam' AND soccer_teams.id = model_translations.relate_id AND lang ='zh-cn' WHERE soccer_teams.id <= ( SELECT max_indexed_id FROM search_counters WHERE index_name='team') GROUP BY soccer_teams.team_id


    sql_attr_uint           = team_id
    sql_attr_uint           = article_count

    sql_query_info_pre      = SET NAMES utf8    
    sql_query_info          = SELECT * FROM soccer_teams WHERE id=$id 
}

source team_delta_source : team_source
{  
    sql_query_pre           = SET NAMES utf8
    sql_query               = SELECT soccer_teams.id AS id, soccer_teams.team_id, soccer_teams.club_name as name, soccer_teams.short_club_name as short_name, word, (case when feeds.id is null then 0 else count(*) end) as article_count FROM teams LEFT JOIN soccer_teams ON soccer_teams.team_id = teams.soccerway_id LEFT JOIN channels ON teams.id = channels.relate_id AND channels.relate_type='Team' LEFT JOIN feeds ON feeds.channel_id = channels.id AND feeds.relate_type = 'Article' LEFT OUTER JOIN model_translations ON model_translations.relate_type = 'SoccerTeam' AND soccer_teams.id = model_translations.relate_id AND lang ='zh-cn' WHERE soccer_teams.id > ( SELECT max_indexed_id FROM search_counters WHERE index_name='team') GROUP BY soccer_teams.team_id
        

    sql_attr_uint           = team_id
    sql_attr_uint           = article_count
}  


#新闻信息
source news_source : mysql_source
{
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO search_counters SELECT 2, 'news', MAX(id) FROM dede_archives
    sql_query               = select id, title, writer, description, body, display_time as senddate from archives left join archives_addons on id = archive_id where id <= ( SELECT max_indexed_id FROM search_counters WHERE index_name='news') and status=1

    sql_field_string	    = senddate
    sql_query_info_pre      = SET NAMES utf8    
    sql_query_info          = SELECT * FROM dede_archives WHERE id=$id 
}

source news_delta_source : news_source
{  
    sql_query_pre           = SET NAMES utf8
    sql_query               = select id, title, writer, description, body, display_time as senddate from archives left join archives_addons on id = archive_id where id > ( SELECT max_indexed_id FROM search_counters WHERE index_name='news') and status=1

    sql_field_string	    = senddate
}  


#主贴信息
source topic_source : mysql_source
{
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO search_counters SELECT 7, 'topic', MAX(id) FROM topics
    sql_query               = SELECT topics.id, topics.title, topics.content, users.username, topics.created_at FROM topics join (select distinct groups.id from groups join groups_leagues on groups_leagues.group_id = groups.id join leagues on groups_leagues.league_id = leagues.id where leagues.id != 7 and groups.type in ('normal', 'waterfall') and groups.status = 'open' and groups.id not in (121)) groups on topics.group_id  = groups.id LEFT JOIN users ON topics.user_id = users.id WHERE topics.id <= ( SELECT max_indexed_id FROM search_counters WHERE index_name='topic') and topics.deleted_at is null;

    sql_field_string        = created_at
    sql_query_info_pre      = SET NAMES utf8
    sql_query_info          = SELECT * FROM topics WHERE id=$id
}

source topic_delta_source : topic_source
{
    sql_query_pre           = SET NAMES utf8
    sql_query               = SELECT topics.id, topics.title, topics.content, users.username, topics.created_at FROM topics join (select distinct groups.id from groups join groups_leagues on groups_leagues.group_id = groups.id join leagues on groups_leagues.league_id = leagues.id where leagues.id != 7 and groups.type in ('normal', 'waterfall') and groups.status = 'open' and groups.id not in (121)) groups on topics.group_id  = groups.id LEFT JOIN users ON topics.user_id = users.id WHERE topics.id > ( SELECT max_indexed_id FROM search_counters WHERE index_name='topic') and topics.deleted_at is null;

    sql_field_string        = created_at
}


#主贴信息
index topic_index
{
    source                  = topic_source
    path                    = /usr/local/coreseek/var/data/topic
    docinfo                 = extern
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    html_strip              = 0

    min_infix_len           = 1;

    charset_dictpath        = /usr/local/mmseg/etc/
    charset_type            = zh_cn.utf-8
}


index topic_delta_index : topic_index
{
    source                  = topic_delta_source
    path                    = /usr/local/coreseek/var/data/topic_delta
}



#index定义
index product_index
{
    source                  = product_source
    path                    = /usr/local/coreseek/var/data/product
    docinfo                 = extern
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    html_strip              = 0

    charset_dictpath        = /usr/local/mmseg/etc/
    charset_type            = zh_cn.utf-8
}


#index定义
index user_index
{
    source                  = user_source
    path                    = /usr/local/coreseek/var/data/user 
    docinfo                 = extern
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    html_strip              = 0

    charset_dictpath        = /usr/local/mmseg/etc/ 
    charset_type            = zh_cn.utf-8
}

index user_delta_index : user_index
{
    source                  = user_delta_source
    path                    = /usr/local/coreseek/var/data/user_delta 
}
    
index player_index 
{
    source                  = player_source
    path                    = /usr/local/coreseek/var/data/player
    docinfo                 = extern
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    html_strip              = 0

    charset_dictpath        = /usr/local/mmseg/etc/
    charset_type            = zh_cn.utf-8
}

index player_delta_index : player_index
{
    source                  = player_delta_source
    path                    = /usr/local/coreseek/var/data/player_delta
}


index team_index 
{
    source                  = team_source
    path                    = /usr/local/coreseek/var/data/team
    docinfo                 = extern
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    html_strip              = 0

    charset_dictpath        = /usr/local/mmseg/etc/ 
    charset_type            = zh_cn.utf-8
}


index team_delta_index : team_index
{
    source                  = team_delta_source
    path                    = /usr/local/coreseek/var/data/team_delta
}

index news_index 
{
    source                  = news_source
    path                    = /usr/local/coreseek/var/data/news 
    docinfo                 = extern
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    html_strip              = 0

    min_infix_len           = 1;

    charset_dictpath        = /usr/local/mmseg/etc/
    charset_type            = zh_cn.utf-8
}

index news_delta_index : news_index
{
    source                  = news_delta_source
    path                    = /usr/local/coreseek/var/data/news_delta 
}


#全局index定义
indexer
{
    mem_limit            = 128M
}

#searchd服务定义
searchd
{
    workers             = prefork 
    listen              = 9312
    listen              = 9306:mysql41    #MySQL 协议支持与SphinxQL
    read_timeout        = 5
    max_children        = 30
    max_matches         = 10000
    seamless_rotate     = 0
    preopen_indexes     = 0
    unlink_old          = 1

    pid_file            = /usr/local/coreseek/var/log/searchd_mysql.pid  
    log                 = /usr/local/coreseek/var/log/searchd_mysql.log  
    query_log           = /usr/local/coreseek/var/log/query_mysql.log    
    binlog_path         = /usr/local/coreseek/var/log                    
    binlog_flush        = 2
    binlog_max_log_size = 16M
}
